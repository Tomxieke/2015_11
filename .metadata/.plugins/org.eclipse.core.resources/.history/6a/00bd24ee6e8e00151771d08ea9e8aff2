package webview;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.sql.Connection;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

import com.example.call.R;

public class HttpServeletActivity extends Activity implements OnClickListener{
	private TextView mShowMsgTxt;
	private Button mConnecyBtn,mDopostBtn,mHttpClientGetBtn;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.httpservelet_main_layout);
		mShowMsgTxt = (TextView) findViewById(R.id.http_text);
		
		mConnecyBtn = (Button) findViewById(R.id.http_doget_btn);
		mConnecyBtn.setOnClickListener(new OnClickListener() {
			String httpUrl = "http://192.168.1.112:8080/app/myweb";
			@Override
			public void onClick(View v) {
				new AsyncTask<String, Void, String>(){
					@Override
					protected String doInBackground(String... params) {
						return getHttpDoget(params[0]);
					}
					protected void onPostExecute(String result) {
						mShowMsgTxt.setText(result);
					};
				}.execute(httpUrl);
			}
		});
		
		mDopostBtn = (Button) findViewById(R.id.http_dopost_btn);
		mDopostBtn.setOnClickListener(new OnClickListener() {
			String http = "http://192.168.1.112:8080/app/myweb";
			@Override
			public void onClick(View v) {
				new AsyncTask<String, Void, String>(){
					@Override
					protected String doInBackground(String... params) {
						return getHttpDopost(params[0]);
					}
					protected void onPostExecute(String result) {
						mShowMsgTxt.setText(result);
					};
				}.execute(http);
			}
		});
		
		mHttpClientGetBtn = (Button) findViewById(R.id.http_client_get_btn);
		mHttpClientGetBtn.setOnClickListener(this);
		
	}
	
	@Override
	public void onClick(View v) {
		switch(v.getId()){
		case R.id.http_client_get_btn:
			String http = "http://192.168.1.112:8080/app/myweb";
			new AsyncTask<String, Void, String>(){
				@Override
				protected String doInBackground(String... params) {
					HttpClient client = new DefaultHttpClient();  //得到客户端
					HttpGet getRequest = new HttpGet(params[0]);   //确定是get请求
					try {
						HttpResponse response = client.execute(getRequest);   //执行请求并得到响应
						String str = EntityUtils.toString(response.getEntity());   //得到响应数据
						return str;
					} catch (ClientProtocolException e) {
						e.printStackTrace();
					} catch (IOException e) {
						e.printStackTrace();
					}
					return null;
				}
				
				protected void onPostExecute(String result) {
					mShowMsgTxt.setText(result + "    HttpClient的响应");
				};
				
			}.execute(http);
			break;
		}
	}
	
	/*post请求方式连接服务器,给服务器传递参数用流写入的方式*/
	public String getHttpDopost(String httpUrl){
		try {
			URL url = new URL(httpUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("POST");  //请求方法
			conn.setConnectTimeout(15000);  //设置连接超时
			conn.setReadTimeout(10000);  //设置读取超时
			conn.connect();  //建立连接
			
			/*得到流向服务器传数据*/
			OutputStream out = conn.getOutputStream();
			PrintWriter pr = new PrintWriter(out);
			pr.print("username=小明&password=1234");
			pr.flush();
			
			/*读取服务端数据*/
			InputStream in = conn.getInputStream();
			BufferedReader br = new BufferedReader(new InputStreamReader(in, "utf-8"));  //得到连接服务器的缓冲流
			String line;
			StringBuilder sb = new StringBuilder();
			while((line=br.readLine()) != null){    //从服务中读取请求返回的数据
				sb.append(line);
			}
			in.close();//关闭连接关闭流
			out.close();
			conn.disconnect();//关闭连接
			return sb.toString();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	
	/*get请求方式连接服务器   get请求传递参数在url后面加参数*/
	public String getHttpDoget(String httpUrl){
		try {
			String name = URLEncoder.encode("小红", "utf-8");   //中文输入先指定编码，不然会出现乱码
			//get请求带参数的URL地址   http://192.168.1.112:8080/app/myweb?username=小红&password=abcd  
			URL url = new URL(httpUrl+"?username="+name+"&password=abcd"); 
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");	//请求方式
			conn.setConnectTimeout(15000);  //设置连接超时
			conn.setReadTimeout(10000);  //设置读取超时
			conn.connect();  //建立连接
			
			InputStream in = conn.getInputStream();
			BufferedReader br = new BufferedReader(new InputStreamReader(in, "utf-8"));  //得到连接服务器的缓冲流
			String line;
			StringBuilder sb = new StringBuilder();
			while((line=br.readLine()) != null){    //从服务中读取请求返回的数据
				sb.append(line);
			}
			in.close();  //关闭连接关闭流
			conn.disconnect();
			return sb.toString();
			
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	
}
